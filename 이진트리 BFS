import sys

class Node:
    def __init__(self,data):
        self.right=self.left=None
        self.data = data
class Solution:
    def insert(self,root,data):
        if root==None:
            return Node(data)
        else:
            if data<=root.data:
                cur=self.insert(root.left,data)
                root.left=cur
            else:
                cur=self.insert(root.right,data)
                root.right=cur
        return root

    def levelOrder(self,root):
        #Write your code here
        queue = [root]
        stack = []
        while queue:
            root = queue.pop(0)
            if root is not None:
                #print(root.data)
                stack.append(root.data)
                if root.left:
                    queue.append(root.left)
                if root.right:
                    queue.append(root.right)
        for item in stack:
            print(item, end = ' ')
        
T=int(input())
myTree=Solution()
root=None
for i in range(T):
    data=int(input())
    root=myTree.insert(root,data)
myTree.levelOrder(root)
